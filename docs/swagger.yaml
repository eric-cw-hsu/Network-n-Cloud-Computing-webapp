basePath: /
definitions:
  go-template_internal_auth_interfaces_dto.LoginInput:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: secretpassword
        type: string
    required:
    - email
    - password
    type: object
  go-template_internal_auth_interfaces_dto.LoginResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/go-template_internal_auth_interfaces_dto.UserResponse'
    type: object
  go-template_internal_auth_interfaces_dto.RegisterInput:
    properties:
      email:
        example: user@example.com
        type: string
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      password:
        example: secretpassword
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  go-template_internal_auth_interfaces_dto.UpdateUserInput:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  go-template_internal_auth_interfaces_dto.UserResponse:
    properties:
      account_created:
        type: string
      account_updated:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample server for Go Template API.
  title: Go Template API Documentation
  version: "1.0"
paths:
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Login to the application
      parameters:
      - description: User login details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/go-template_internal_auth_interfaces_dto.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-template_internal_auth_interfaces_dto.LoginResponse'
      summary: Login
      tags:
      - auth
  /healthz:
    get:
      description: Check if the database is healthy
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Database health check
      tags:
      - shared
  /v1/user:
    get:
      consumes:
      - application/json
      description: Get user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-template_internal_auth_interfaces_dto.UserResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user profile
      tags:
      - auth
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User registration details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/go-template_internal_auth_interfaces_dto.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/go-template_internal_auth_interfaces_dto.UserResponse'
      summary: Register a new user
      tags:
      - auth
    put:
      consumes:
      - application/json
      description: Update user profile
      parameters:
      - description: User update details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/go-template_internal_auth_interfaces_dto.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/go-template_internal_auth_interfaces_dto.UserResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user profile
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    description: Authorization token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
